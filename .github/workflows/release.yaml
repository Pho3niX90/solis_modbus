name: Release

on:
  workflow_dispatch:

env:
  COMPONENT_NAME: solis_modbus

jobs:
  release:
    name: Prepare release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get install jq

      - name: Install Python semver
        run: pip install semver

      - name: Get latest tag or fail
        id: get-latest-tag
        run: |
          latest_tag=$(git for-each-ref --sort=version:refname --format '%(refname)' refs/tags/ | grep -v 'latest' | tail -1 | sed 's/^refs\/tags\///; s/^v//')
          if [ -z "$latest_tag" ]; then
            echo "No tags found for the commit."
            exit 1
          fi
          echo "tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Get current version from manifest.json
        id: get-version
        run: |
          current_version=$(cat "${{ github.workspace }}/custom_components/${{ env.COMPONENT_NAME }}/manifest.json" | jq -r '.version')
          echo "version=$current_version" >> $GITHUB_ENV

      - name: Check if version is higher and bump if needed
        id: check-version
        run: |
          latest="${{ steps.get-latest-tag.outputs.tag }}"
          current="${{ env.version }}"

          echo "Current version: $current"
          echo "Latest tag: $latest"

          # Check if current version is higher than the latest tag
          is_higher=$(python -c "import semver; print(semver.compare('$current', '$latest') > 0)")

          if [ "$is_higher" != "True" ]; then
            echo "The version is not higher. Bumping patch version..."
            bumped=$(python -c "import semver; print(semver.bump_patch('$latest'))")
            echo "New version: $bumped"
            jq ".version = \"$bumped\"" "${{ github.workspace }}/custom_components/${{ env.COMPONENT_NAME }}/manifest.json" > package.tmp.json && mv package.tmp.json "${{ github.workspace }}/custom_components/${{ env.COMPONENT_NAME }}/manifest.json"
            echo "version=$bumped" >> $GITHUB_ENV
          else
            echo "version=$current" >> $GITHUB_ENV
          fi

          echo "is_higher_version=true" >> $GITHUB_ENV

      - name: Commit and push version bump
        if: env.is_higher_version == 'true'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add custom_components/${{ env.COMPONENT_NAME }}/manifest.json
          git diff --exit-code || (git commit -m "chore: bump version to v${{ env.version }}" && git push)

      - name: Zip ${{ env.COMPONENT_NAME }} dir
        run: |
          cd "${{ github.workspace }}/custom_components/${{ env.COMPONENT_NAME }}"
          zip ${{ env.COMPONENT_NAME }}.zip -r ./

      - name: Upload zip to release
        if: env.is_higher_version == 'true'
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ github.workspace }}/custom_components/${{ env.COMPONENT_NAME }}/${{ env.COMPONENT_NAME }}.zip
          tag_name: v${{ env.version }}
          name: v${{ env.version }}
          token: ${{ secrets.PAT }}
          generate_release_notes: true

      - name: üè∑Ô∏è Update latest tag
        if: env.is_higher_version == 'true'
        uses: EndBug/latest-tag@latest
